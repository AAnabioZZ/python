# 1. Представлен список чисел. Необходимо вывести элементы исходного списка, значения которых больше предыдущего элемента. Use comprehension.
# in
# 9

# out
# [15, 16, 2, 3, 1, 7, 5, 4, 10]
# [16, 3, 7, 10]


from random import randint


# n1=int(input("введите размер изначального массива"))
# lst = [randint(1,20) for i in range(n1)]
# print(f"{lst}\n{[lst[i] for i in range(1, len(lst)) if lst[i] > lst[i-1]]}")


# 2. Для чисел в пределах от 20 до N найти числа, кратные 20 или 21. Use comprehension.

# n = int(input("Введите число N: "))
# print([i for i in range(20, n+1) if i % 20 == 0 or i % 21 == 0])

# 3. Написать функцию, аргументы имена сотрудников, возвращает словарь,
#  ключи — первые буквы имён, значения — списки, содержащие имена,
# начинающиеся с соответствующей буквы.
#
# in
#
# "Иван", "Мария", "Петр", "Илья", "Марина", "Петр", "Алина", "Бибочка"

# out

# {'А': ['Алина'], 'Б': ['Бибочка'], 'И': ['Иван', 'Илья'],
# 'М': ['Марина', 'Мария'], 'П': ['Петр', 'Петр']}

# start="Иван", "Мария", "Петр", "Илья", "Марина", "Петр", "Алина", "Бибочка"

# def creation_slovar(inport_list):
#     slovar={}
#     for i in sorted(inport_list):
#         if i[0] in slovar:
#             slovar[i[0]].append(i)
#         else:
#             slovar[i[0]] = i.split()
#     return slovar
# print(start)
# print(creation_slovar(start))

# 4. * Функция принимает в качестве аргументов строки в
# формате «Имя Фамилия», возвращает словарь, ключи — первые
# буквы фамилий, значения — словари, реализованные по схеме
# предыдущего задания.
# in
# "Иван Сергеев", "Инна Серова", "Петр Алексеев",
# "Илья Иванов", "Анна Савельева", "Юнона Ветрякова",
# "Борис Аркадьев", "Антон Серов", "Павел Анисимов"

# out

# {'С': {'А': ['Анна Савельева', 'Антон Серов'], 'И': ['Иван Сергеев', 'Инна Серова']},
#  'А': {'Б': ['Борис Аркадьев'], 'П': ['Павел Анисимов', 'Петр Алексеев']},
#  'И': {'И': ['Илья Иванов']}, 'В': {'Ю': ['Юнона Ветрякова']}}

# st="Иван Сергеев", "Инна Серова", "Петр Алексеев", "Илья Иванов", "Анна Савельева", "Юнона Ветрякова", "Борис Аркадьев", "Антон Серов", "Павел Анисимов"

# def creation_slovar(inport_list):
#     slovar={}
#     for i in sorted(inport_list):
#         for j in range(len(i)):
#             if i[j]==" ":
#                 if i[j+1] in  slovar:
#                     slovar[i[j+1]] += [i]
#                 else:
#                     slovar[i[j+1]] = i.split("_")
#                 break
#     for k in slovar:
#         slovar2level={}
#         for s in slovar[k]:
#             if s[0] in slovar2level:
#                 slovar2level[s[0]].append(s)
#             else:
#                 slovar2level[s[0]] = [s]
#         slovar[k]=slovar2level

#     return slovar


# print(creation_slovar(st))

# 5. ** Реализовать функцию, возвращающую n шуток, сформированных из трех случайных слов,
# взятых из трёх списков (по одному из каждого)
# nouns = ["автомобиль", "лес", "огонь", "город", "дом"]
# adverbs = ["сегодня", "вчера", "завтра", "позавчера", "ночью", "когда-то", "где-то"]
# adjectives = ["веселый", "яркий", "зеленый", "утопичный", "мягкий"]

# in
# 10 True

# out

# ['дом ночью мягкий', 'огонь завтра зеленый',
#  'лес вчера яркий', 'автомобиль сегодня веселый',
#   'город позавчера утопичный']

# in
# 10 False

# ['автомобиль ночью мягкий', 'огонь вчера веселый',
# 'автомобиль позавчера веселый', 'город вчера утопичный',
# 'лес сегодня зеленый', 'дом вчера яркий', 'автомобиль вчера зеленый',
# 'огонь позавчера яркий', 'огонь где-то утопичный', 'автомобиль где-то мягкий']
import random
from secrets import choice
nouns = ["автомобиль", "лес", "огонь", "город", "дом"]
adverbs = ["сегодня", "вчера", "завтра",
           "позавчера", "ночью", "когда-то", "где-то"]
adjectives = ["веселый", "яркий", "зеленый", "утопичный", "мягкий"]


def random_joi(sp1:list,sp2:list,sp3:list,original,n):
     ran=random.choice
     if original:
        if n >len(sp1): n=len(sp1)
        if n >len(sp2): n=len(sp2)
        if n >len(sp3): n=len(sp3)
        random.shuffle(sp1)
        random.shuffle(sp2)
        random.shuffle(sp3)
        return [sp1[i] + " " + sp2[i] + " " + sp3[i]  for i in range(len(sp1)) ]
     else: return [ran(sp1) + " " + ran(sp2) + " " + ran(sp3)  for _ in range(n) ]

print(random_joi(nouns,adverbs,adjectives,False,10))
